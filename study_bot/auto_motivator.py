#!/usr/bin/env python3
"""
ูุญุฏุฉ ุงูุฅุฑุณุงู ุงูุชููุงุฆู ููุฑุณุงุฆู ุงูุชุญููุฒูุฉ
ุชุญุชูู ุนูู ูุธุงุฆู ูุฅุฑุณุงู ุฑุณุงุฆู ุชุญููุฒูุฉ ุชููุงุฆูุฉ ุจุนุฏ ููุช ูุญุฏุฏ ูู ุชูุนูู ุงูุจูุช
"""

import threading
import time
import random
from datetime import datetime

from study_bot.config import logger, MOTIVATIONAL_MESSAGES, get_current_time
from study_bot.models import db, User, Group
from study_bot.bot import send_message

# ููุช ุงูุชุฃุฎูุฑ ุจุงูุซูุงูู ูุจู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุงูุชุญููุฒูุฉ
ACTIVATION_MOTIVATION_DELAY = 60  # ุฏูููุฉ ูุงุญุฏุฉ


def send_activation_motivation():
    """ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญููุฒูุฉ ูุฌููุน ุงููุฌููุนุงุช ุงููุดุทุฉ ุจุนุฏ ุชูุนูู ุงูุจูุช"""
    try:
        logger.info("ุฌุฏููุฉ ุฅุฑุณุงู ุฑุณุงุฆู ุชุญููุฒูุฉ ุจุนุฏ ุงูุชูุนูู...")
        
        # ุงูุชุธุงุฑ ุงูููุช ุงููุญุฏุฏ
        time.sleep(ACTIVATION_MOTIVATION_DELAY)
        
        # ุงูุญุตูู ุนูู ุงููุฌููุนุงุช ุงููุดุทุฉ
        groups = Group.query.filter_by(is_active=True).all()
        if not groups:
            logger.warning("ูุง ุชูุฌุฏ ูุฌููุนุงุช ูุดุทุฉ ูุฅุฑุณุงู ุฑุณุงุฆู ุชุญููุฒูุฉ")
            return
        
        # ุฅุนุฏุงุฏ ุงูุฑุณุงูุฉ ุงูุชุญููุฒูุฉ
        current_time = get_current_time()
        motivation_message = random.choice(MOTIVATIONAL_MESSAGES)
        message_text = f"""๐ <b>ุชู ุชูุนูู ุจูุช ุงูุฏุฑุงุณุฉ ูุงูุชุญููุฒ!</b> ๐

{motivation_message}

๐ <b>ุงูููุช ุงูุญุงูู:</b> {current_time.strftime('%H:%M')}
๐ <b>ุงูุชุงุฑูุฎ:</b> {current_time.strftime('%Y-%m-%d')}

ุงุณุชุฎุฏู ุฃูุฑ /help ููุญุตูู ุนูู ูุงุฆูุฉ ุงูุฃูุงูุฑ ุงููุชุงุญุฉ.
"""
        
        sent_count = 0
        for group in groups:
            try:
                result = send_message(group.telegram_id, message_text)
                if result:
                    sent_count += 1
                    logger.info(f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุชูุนูู ุชุญููุฒูุฉ ุฅูู ุงููุฌููุนุฉ {group.title} (ID: {group.telegram_id})")
                else:
                    logger.error(f"ูุดู ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุชูุนูู ุชุญููุฒูุฉ ุฅูู ุงููุฌููุนุฉ {group.title} (ID: {group.telegram_id})")
            except Exception as e:
                logger.error(f"ุฎุทุฃ ุฃุซูุงุก ุฅุฑุณุงู ุฑุณุงูุฉ ุชูุนูู ุชุญููุฒูุฉ: {e}")
                continue
        
        logger.info(f"ุชู ุฅุฑุณุงู ุฑุณุงุฆู ุชูุนูู ุชุญููุฒูุฉ ุฅูู {sent_count} ูุฌููุนุฉ ูู ุฃุตู {len(groups)} ูุฌููุนุฉ ูุดุทุฉ")
        return True
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ุฏุงูุฉ ุฅุฑุณุงู ุงูุฑุณุงุฆู ุงูุชุญููุฒูุฉ ุจุนุฏ ุงูุชูุนูู: {e}")
        return False


def schedule_activation_motivation():
    """ุฌุฏููุฉ ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญููุฒูุฉ ูู ุณูุณูุฉ ูููุตูุฉ"""
    motivation_thread = threading.Thread(target=send_activation_motivation)
    motivation_thread.daemon = True
    motivation_thread.start()
    return motivation_thread