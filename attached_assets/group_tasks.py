#!/usr/bin/env python3
"""
ูุญุฏุฉ ููุงู ุงููุฌููุนุงุช
ุชุญุชูู ุนูู ูุธุงุฆู ููุชุนุงูู ูุน ููุงู ุงููุฌููุนุงุช ุฐุงุช ุงููููุฉ ุงูุฒูููุฉ
ุชู ุชุทููุฑู ููุดูู ุฌุฏุงูู ุตุจุงุญูุฉ ููุณุงุฆูุฉ ูุชูุงููุฉ
"""

import json
import random
from datetime import datetime, timedelta

from study_bot.config import TELEGRAM_API_URL, logger
from study_bot.models import (User, Group, GroupParticipant, 
                            GroupScheduleTracker, GroupTaskTracker,
                            GroupTaskParticipant, MotivationalMessage, db)
from study_bot.group_handlers import send_group_message, answer_callback_query, edit_group_message

# ุชุญููุฒุงุช ุฅุถุงููุฉ ููุนุฑุถ ูุน ุงูููุงู
MOTIVATIONAL_QUOTES = [
    "ุงูุถู ูุฏูุงูุ ุญุชู ุนูุฏูุง ุชููู ุงูุฎุทูุฉ ุตุนุจุฉ ูุงูุทุฑูู ุทูููุฉ.",
    "ุงููุฌุงุญ ููุณ ููุงุฆูุงูุ ูุงููุดู ููุณ ูุงุชูุงูุ ุงูุดุฌุงุนุฉ ููููุงุตูุฉ ูู ูุง ููู.",
    "ุงููุฐุงูุฑุฉ ุงูููู ุชุนูู ุงููุฌุงุญ ุบุฏุงู.",
    "ูู ุชุนุจ ุณุงุนุฉ ุชูุนู ุฃูู ุณุงุนุฉ.",
    "ููุณ ุงูููู ุฃู ุชุจุฏุฃ ุจููุฉุ ุงูุฃูู ุฃู ุชุณุชูุฑ ุจุนุฒููุฉ.",
    "ุงูุนูู ููุฑุ ูุงูุชุฑููุฒ ููุชุงุญู.",
    "ุงูุงุณุชุซูุงุฑ ูู ุงูุนูู ูุนุทู ุฃูุถู ุงูููุงุฆุฏ.",
    "ุฑุบู ุงูุชุนุจ ูุงูุณูุฑุ ุณุชุจูู ุงููุฑุญุฉ ุฃูุจุฑ.",
    "ุฌุจุงู ุงููุฌุงุญ ูุง ูููู ุชุณูููุง ุจุฃูุฏู ูู ุงูุฌููุจ.",
    "ูุง ููุช ูููุณูุ ูู ุฏูููุฉ ููุง ุซูู."
]

# ุงูุฌุฏูู ุงูุตุจุงุญู ูุฑุณุงุฆูู
MORNING_SCHEDULE = [
    ("03:00", "daily_plan", "๐ ุฎุทุฉ ูููู ุงูุฏุฑุงุณู!\n\n14 ุณุงุนุฉ ุชุฑููุฒ\n\n5 ุตููุงุช ุนูู ููุชูู\n\n\nุงุจุฏุฃ ูููู ุจููุฉ ุตุงููุฉ ูุชููู ุนูู ุงููู.\nูู ุณุงุนุฉ ุจุชูุฑุจู ูู ุญููู!\n\n\n---", 2),
    ("04:25", "prayer_1", "๐ ุตูุงุฉ ุงููุฌุฑ ูุง ุจุทู!\n\"ุงูุตูุงุฉ ุฎูุฑ ูู ุงูููู\"\nููู ุงุชูุถู ูุตูููุ ูุงุจุฏุฃ ูููู ุจุทุงูุฉ ุฑุจุงููุฉ.\n\n\n---", 2),
    ("08:00", "breakfast", "โ ูุทุงุฑ ูุฑุงุญุฉ ุฎูููุฉ\nุงูุชุญ ุงูุดุจุงูุ ุฎุฏ ููุณ ุนูููุ ูุงุดุฑุจ ุญุงุฌุฉ ุณุฎูุฉ.\nุฎุฏ ุจุฑูู ุนูุดุงู ุชุฑุฌุน ุฃููู.\n\n\n---", 1),
    ("08:30", "back_to_study", "๐ ููุง ูุฑุฌุน ููุฌุฒ!\nูุฑูู ูุฏุงููุ ุชุฑููุฒู ูู ุงูุณูู!\nุงููุฌุงุญ ูุณุชูู ุงููู ูุณุนู ูู.\n\n\n---", 3),
    ("11:00", "short_break", "โธ ุงุณุชุฑุงุญุฉ ุณุฑูุนุฉ ูกูฅ ุฏูููุฉ\nููู ุงุชุญุฑู ุดููุฉุ ุงูุตู ุฏูุงุบู ูู ุงููุฐุงูุฑุฉ.\nุจุณ ุจูุงุด ุชุบุฑู ูู ุงูููุจุงูู!\n\n\n---", 1),
    ("11:15", "back_after_break", "โก ุฑุฌุนูุง ูุฐุงูุฑ ุชุงูู!\nุงูุฑุงุญุฉ ุฎูุตุชุ ูุงูุฅูุฌุงุฒ ุจููุงุฏู.\nุฑูุฒ ูุดูู ูุชูุตู ูููู ุงูููุงุฑุฏู.\n\n\n---", 3),
    ("12:51", "prayer_2", "๐ ุตูุงุฉ ุงูุธูุฑ\nููู ุตููู ูุงุฑุฌุน ููู ูููู ุจุฑุงุญุฉ ููุจ.\nุฑุจูุง ูุนุงุงู.\n\n\n---", 2),
    ("13:01", "after_prayer_study", "๐ ูุฐุงูุฑุฉ ุจุนุฏ ุงูุตูุงุฉ\nุงูุทุงูุฉ ุฑุฌุนุช.. ูุงููููุฉ ูุณู ูุง ุฎูุตุชุด.\nุดุฏ ุญููู.\n\n\n---", 3),
    ("14:00", "nap_time", "๐ค ููุช ุงููููููุฉ / ุงูุฑุงุญุฉ\nุฑูุญ ุฌุณูู ูุฏูุงุบู ุดููุฉ.\nุงูุฑุงุญุฉ ุฌุฒุก ูู ุงูุฅูุฌุงุฒ.\n\n\n---", 1),
    ("15:30", "wake_up", "โฐ ููุง ููู!\nุงุณุชุนุฏ ูููู ุจุงูู ุงูููู ุจููุฉ.\nูุณู ูู ููุช ุชูุฌุฒ ููู ูุชูุฑ.\n\n\n---", 1),
    ("16:28", "prayer_3", "๐ ุตูุงุฉ ุงูุนุตุฑ\nุงูุตู ุดููุฉ ุนู ุงูุฏููุงุ ูุตูู.\nูู ูุง ุชุชูุฑุจ ูู ุฑุจูุงุ ุฑุจูุง ููุฑุจู ูู ุญููู.\n\n\n---", 2),
    ("16:38", "study_3", "๐ ูููู ูุฐุงูุฑุฉ ุชุงูู!\nุฎุฏ ููุณ.. ุฑููุฒ.. ููู ุญุงุฌุฉ ูุชุจูู ุชูุงู.\n\n\n---", 3),
    ("19:39", "prayer_4", "๐ ุตูุงุฉ ุงููุบุฑุจ\nููู ุตูููุ ูุงุฏุนู ุฅู ุชุนุจู ูุงูุฑูุญุด ูุฏุฑ.\nุงูุตููุงุช ุจุชููุฑ ูู ุงูุทุฑูู.\n\n\n---", 2),
    ("21:06", "prayer_5", "๐ ุตูุงุฉ ุงูุนุดุงุก\nุงูุฎุชุงู ุจูููู ุฏุงูููุง ูุน ุฑุจูุง.\nุตูููู ุจุฎุดูุนุ ูุงุทูุจ ููู ุงูุซุจุงุช.\n\n\n---", 2),
    ("21:30", "evaluation", "๐ ุชูููู ูููู ุงูุฏุฑุงุณู\n\nุณุงุนุงุช ุงููุฐุงูุฑุฉ: 13.5\n\nุงูุตููุงุช: 5/5\n\nุงูุงุณุชุฑุงุญุงุช: ุชูุงู\n\n\nุฅูุช ุจุทู ุจุฌุฏ!\nูู ุชุนุจู ุฏู ูุชูุงููู ูู ุงููุชูุฌุฉ.\n\nุฎูุตุช ุฃูุฏุงููุ\n/ูุนู โ | /ูุง โ | /ูู_ุฃุจุฏุฃ_ุจุนุฏ", 2)
]

# ุงูุฌุฏูู ุงููุณุงุฆู ูุฑุณุงุฆูู
EVENING_SCHEDULE = [
    ("16:00", "evening_plan", "๐ ุงููุฏู ุงููููู ุงูุฏุฑุงุณู!\n\nุชุจุฏุฃ ูู ุงูุขู ุญุชู 4:00 ูุฌุฑุงู\n\nูุฏูู: 12 ุณุงุนุฉ ูุฐุงูุฑุฉ\n\nุงูุตููุงุช: ุงูุนุดุงุก โ / ุงููุฌุฑ โ\n\n\nุงุจุฏุฃ ุฎุทุชู ุจููุจ ููู ูููุฉ ุนุงููุฉุ ูุฎููู ููุชู ููู.\n\n\n---", 2),
    ("20:00", "dinner_break", "โ ุงุณุชุฑุงุญุฉ ุณุฑูุนุฉ\nุงุชุนุดุงุ ูุงุฑุฌุน ุฃููู.\nุงูุชุฑููุฒ ูุญุชุงุฌ ุทุงูุฉ.\n\n\n---", 1),
    ("20:30", "night_study", "๐ ุนูุฏุฉ ูููุฐุงูุฑุฉ!\nุฎุฏ ููุณ ุนููู ูุงุจุฏุฃ ุตูุญุฉ ุฌุฏูุฏุฉ ูู ุงูุฅูุฌุงุฒ.\n\n\n---", 3),
    ("21:10", "prayer_5", "๐ ุตูุงุฉ ุงูุนุดุงุก\nุฑุจูุง ุจูุฎุชู ูููู ุจููุฑ.\nููู ุตูู ุจุฎุดูุนุ ูุงุฏุนู ุฑุจูุง ูุซุจุชู.\n\n\n---", 2),
    ("01:30", "qiyam", "๐คฒ ููุงู ุงูููู\nุงุบุชูู ูุฏูุก ุงูููู ููุชูุฑุจ ุฅูู ุงููู.\nุงุฏุนู ุจูุง ุชุฑูุฏุ ูุงูุฏุนูุงุช ุฃุซูุงุก ููุงู ุงูููู ูุณุชุฌุงุจุฉ.\n\n\n---", 3),
    ("01:00", "long_break", "๐ค ุงุณุชุฑุงุญุฉ ุทูููุฉ ูุตู ุณุงุนุฉ\nุฑูุญ ุฌุณููุ ุงูุตู ุฏูุงุบู ุดููุฉ.\nูููู ุชุชูุดู ุฃู ุชุณูุน ุญุงุฌุฉ ุฎูููุฉุ ุจุณ ุฎููู ูุฑูุจ ูู ูุฏูู.\n\n\n---", 1),
    ("04:05", "night_evaluation", "๐ ุชูููู ูููู ุงููููู\n\nุนุฏุฏ ุณุงุนุงุช ุงููุฐุงูุฑุฉ: 12\n\nุงูุตููุงุช: ุงูุนุดุงุก โ / ุงููุฌุฑ โ\n\n\nุญููุช ูุฏูู ุงูููููุ\n/ูุนู โ | /ูุง โ | /ูู_ุฃุจุฏุฃ_ุจุนุฏ\n\n\n---", 2),
    ("04:25", "prayer_1", "๐ ุตูุงุฉ ุงููุฌุฑ\nูู ูุณู ุตุงุญูุ ููู ุตููู.\nุงููุฌุฑ ูู ุจุฏุงูุฉ ููู ุฌุฏูุฏุ ุญุชู ูู ูุณู ุจุชุฎุชู.\n\n\n---", 2)
]

# ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฌุฏูู ุงูุตุจุงุญู ูููุฌููุนุฉ
def send_group_morning_message(group_telegram_id):
    """ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฌุฏูู ุงูุตุจุงุญู ูููุฌููุนุฉ"""
    try:
        # ุงุฎุชูุงุฑ ุงูุชุจุงุณ ุชุญููุฒู ุนุดูุงุฆู
        motivation = random.choice(MOTIVATIONAL_QUOTES)
        
        # ุฅูุดุงุก ุฑุณุงูุฉ ุงูุชุฑุญูุจ
        welcome_text = f"""
๐ โญโโโโโโโโโโโโโโโโโโโโโโโฎ
      ุฌุฏูู ุงููุนุณูุฑ ุงูุตุจุงุญู
โฐโโโโโโโโโโโโโโโโโโโโโโโฏ

ูุฑุญุจุงู ุจูู ูู ูุนุณูุฑ ุงูุฏุฑุงุณุฉ ุงูุตุจุงุญู!
ููุจุฏุฃ ูููุงู ูููุฆุงู ุจุงูุฅูุฌุงุฒ ูุงูุชุฑููุฒ ๐

โฐ ุงูููุงู ุงููุงุฏูุฉ ุฎูุงู ุงูููู:
๐ธ ุงููุฌุฑ 04:25
๐ธ ุงููุฐุงูุฑุฉ 08:30
๐ธ ุงูุธูุฑ 12:51 
๐ธ ุงูุนุตุฑ 16:28
๐ธ ุงููุบุฑุจ 19:39
๐ธ ุงูุนุดุงุก 21:06

๐ {motivation}

ููุง ุจูุง ูุจุฏุฃ! ๐ช
"""
        
        # ุฅุถุงูุฉ ุฒุฑ ููุงูุถูุงู ูููุนุณูุฑ
        keyboard = {
            "inline_keyboard": [
                [{
                    "text": "โ ุงูุถู ูููุนุณูุฑ ุงูุตุจุงุญู",
                    "callback_data": "join_morning_camp"
                }]
            ]
        }
        
        # ุฅุฑุณุงู ุงูุฑุณุงูุฉ
        result = send_group_message(group_telegram_id, welcome_text, keyboard)
        logger.info(f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฌุฏูู ุงูุตุจุงุญู ูููุฌููุนุฉ {group_telegram_id}")
        return result
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฌุฏูู ุงูุตุจุงุญู ูููุฌููุนุฉ {group_telegram_id}: {e}")
        return None


# ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฌุฏูู ุงููุณุงุฆู ูููุฌููุนุฉ
def send_group_evening_message(group_telegram_id):
    """ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฌุฏูู ุงููุณุงุฆู ูููุฌููุนุฉ"""
    try:
        # ุงุฎุชูุงุฑ ุงูุชุจุงุณ ุชุญููุฒู ุนุดูุงุฆู
        motivation = random.choice(MOTIVATIONAL_QUOTES)
        
        # ุฅูุดุงุก ุฑุณุงูุฉ ุงูุชุฑุญูุจ
        welcome_text = f"""
๐ โญโโโโโโโโโโโโโโโโโโโโโโโฎ
      ุฌุฏูู ุงููุนุณูุฑ ุงููุณุงุฆู
โฐโโโโโโโโโโโโโโโโโโโโโโโฏ

ูุฑุญุจุงู ุจูู ูู ูุนุณูุฑ ุงูุฏุฑุงุณุฉ ุงููุณุงุฆู!
ููุช ุงููุฐุงูุฑุฉ ุงููุฑูุฒุฉ ูุงูุฅูุฌุงุฒุงุช ุงูุนุธููุฉ ๐

โฐ ุงูููุงู ุงููุงุฏูุฉ ุฎูุงู ุงูููู:
๐ธ ุงูุจุฏุงูุฉ 16:00
๐ธ ุงูุนุดุงุก 20:00
๐ธ ุงูุฏุฑุงุณุฉ 20:30
๐ธ ุงูุนุดุงุก 21:10
๐ธ ุงุณุชุฑุงุญุฉ 01:00
๐ธ ุชูููู 04:05
๐ธ ุงููุฌุฑ 04:25

๐ {motivation}

ููุง ุจูุง ูุจุฏุฃ! ๐ช
"""
        
        # ุฅุถุงูุฉ ุฒุฑ ููุงูุถูุงู ูููุนุณูุฑ
        keyboard = {
            "inline_keyboard": [
                [{
                    "text": "โ ุงูุถู ูููุนุณูุฑ ุงููุณุงุฆู",
                    "callback_data": "join_evening_camp"
                }]
            ]
        }
        
        # ุฅุฑุณุงู ุงูุฑุณุงูุฉ
        result = send_group_message(group_telegram_id, welcome_text, keyboard)
        logger.info(f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฌุฏูู ุงููุณุงุฆู ูููุฌููุนุฉ {group_telegram_id}")
        return result
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฌุฏูู ุงููุณุงุฆู ูููุฌููุนุฉ {group_telegram_id}: {e}")
        return None


# ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญููุฒูุฉ ูููุฌููุนุฉ
def send_motivation_to_group(group_telegram_id):
    """ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญููุฒูุฉ ูููุฌููุนุฉ"""
    try:
        # ุงูุญุตูู ุนูู ุฑุณุงูุฉ ุชุญููุฒูุฉ ุนุดูุงุฆูุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        motivational_message = MotivationalMessage.query.order_by(db.func.random()).first()
        
        # ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ุฑุณุงุฆู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุชุ ุงุณุชุฎุฏู ุงูุฑุณุงุฆู ุงููุถููุฉ
        if not motivational_message:
            motivation_text = random.choice(MOTIVATIONAL_QUOTES)
        else:
            motivation_text = motivational_message.message
        
        # ุฅูุดุงุก ุฑุณุงูุฉ ุชุญููุฒูุฉ ูุงููุฉ
        full_text = f"""
โจ <b>ุฑุณุงูุฉ ุชุญููุฒูุฉ:</b>

"{motivation_text}"

๐ฅ ุงุณุชูุฑ ูู ุงูุชูุฏู! ุงูุฅูุฌุงุฒ ููุชุธุฑู.
"""
        
        # ุฅุฑุณุงู ุงูุฑุณุงูุฉ
        result = send_group_message(group_telegram_id, full_text)
        logger.info(f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญููุฒูุฉ ูููุฌููุนุฉ {group_telegram_id}")
        return result
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญููุฒูุฉ ูููุฌููุนุฉ {group_telegram_id}: {e}")
        return None


# ุฅุฑุณุงู ุฑุณุงูุฉ ูููุฉ ูุน ูููุฉ ุฒูููุฉ ูููุดุงุฑูุฉ
def send_group_task_message(group_id, task_type, text, points=1, deadline_minutes=10):
    """ุฅุฑุณุงู ุฑุณุงูุฉ ูููุฉ ูููุฌููุนุฉ ูุน ุฒุฑ ูููุดุงุฑูุฉ ููููุฉ ุฒูููุฉ"""
    try:
        # ุงูุญุตูู ุนูู ุงููุฌููุนุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        group = Group.query.get(group_id)
        if not group:
            logger.error(f"ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุฌููุนุฉ {group_id}")
            return None
            
        # ุงูุญุตูู ุนูู ุชุชุจุน ุฌุฏูู ุงููุฌููุนุฉ ูููู ุงูููู
        schedule_type = 'morning' if group.morning_schedule_enabled else 'evening' if group.evening_schedule_enabled else 'custom'
        schedule = GroupScheduleTracker.get_or_create_for_today(group_id, schedule_type)
        
        # ุฅุถุงูุฉ ุฒุฑ ูููุดุงุฑูุฉ ูู ุงููููุฉ
        deadline_text = f"โฐ ููููู ุงูุงูุถูุงู ุฎูุงู {deadline_minutes} ุฏูุงุฆู ููุท"
        
        # ุฅุถุงูุฉ ูุนูููุงุช ุงูููุงุท
        points_text = f"๐ ุณุชุญุตู ุนูู {points} ููุงุท ุนูุฏ ุงููุดุงุฑูุฉ"
        
        # ุฅูุดุงุก ูุต ุงูุฑุณุงูุฉ ุงููุงูู
        full_text = f"{text}\n\n{deadline_text}\n{points_text}"
        
        # ุฅูุดุงุก ุฒุฑ ุงููุดุงุฑูุฉ
        keyboard = {
            "inline_keyboard": [
                [{
                    "text": "โ ุงูุถู ูููููุฉ",
                    "callback_data": f"task_join:{task_type}:{schedule.id}"
                }]
            ]
        }
        
        # ุฅุฑุณุงู ุงูุฑุณุงูุฉ
        message = send_group_message(group.telegram_id, full_text, keyboard)
        if not message:
            logger.error(f"ูุดู ุฅุฑุณุงู ุฑุณุงูุฉ ุงููููุฉ ูููุฌููุนุฉ {group.telegram_id}")
            return None
            
        # ุฅูุดุงุก ุณุฌู ุงููููุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        task = GroupTaskTracker.create_task(
            schedule_id=schedule.id,
            task_type=task_type,
            message_id=message.get('message_id'),
            deadline_minutes=deadline_minutes,
            points=points
        )
        
        logger.info(f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุงููููุฉ {task_type} ูููุฌููุนุฉ {group.telegram_id}")
        return task
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุงููููุฉ ูููุฌููุนุฉ {group_id}: {e}")
        return None


# ูุนุงูุฌุฉ ุงูุงูุถูุงู ููููุฉ
def handle_task_join(task_type, schedule_id, user_id, chat_id, callback_query_id):
    """ูุนุงูุฌุฉ ุทูุจ ุงูุงูุถูุงู ููููุฉ"""
    try:
        # ุงูุญุตูู ุนูู ุงููููุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        schedule_id = int(schedule_id)
        task = GroupTaskTracker.query.filter_by(schedule_id=schedule_id, task_type=task_type).first()
        
        if not task:
            answer_callback_query(callback_query_id, "โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููููุฉ ุงููุทููุจุฉ")
            return False
            
        # ุงูุชุญูู ูู ูููุฉ ุงููููุฉ
        if not task.is_open():
            answer_callback_query(callback_query_id, "โ ุงูุชูุช ูููุฉ ุงูุงูุถูุงู ููุฐู ุงููููุฉ ุฎููู ุฌุงูุฒ ุงููููู ุงูุฌูู")
            return False
            
        # ุงูุญุตูู ุนูู ุจูุงูุงุช ุงููุณุชุฎุฏู
        user = User.get_or_create(user_id)
        
        # ุงูุญุตูู ุนูู ุจูุงูุงุช ุงูุฌุฏูู
        schedule = task.schedule
        group = Group.query.get(schedule.group_id)
        
        # ุฅูุดุงุก ูุดุงุฑู ูููุฌููุนุฉ ุฅุฐุง ูู ููู ููุฌูุฏุงู
        group_participant = GroupParticipant.get_or_create(group.id, user.id)
        
        # ุฅุถุงูุฉ ุงููุณุชุฎุฏู ููุดุงุฑู ูู ุงููููุฉ
        participant = task.add_participant(user.id)
        
        if not participant:
            answer_callback_query(callback_query_id, "โ ูู ูุชู ุชุณุฌูู ูุดุงุฑูุชู ูู ุงููููุฉ")
            return False
            
        # ุฅุฑุณุงู ุชุฃููุฏ ูููุณุชุฎุฏู
        answer_callback_query(
            callback_query_id, 
            f"โ ุชู ุชุณุฌูู ูุดุงุฑูุชู ูู ูููุฉ {get_task_name(task_type)}! (+{participant.points_earned} ููุทุฉ)"
        )
        
        logger.info(f"ุชู ุชุณุฌูู ุงููุณุชุฎุฏู {user_id} ูู ุงููููุฉ {task_type} ูููุฌููุนุฉ {chat_id}")
        return True
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุงูุถูุงู ูููููุฉ: {e}")
        answer_callback_query(callback_query_id, "โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุทูุจู")
        return False


# ุงูุญุตูู ุนูู ุงุณู ุงููููุฉ
def get_task_name(task_type):
    """ุงูุญุตูู ุนูู ุงูุงุณู ุงูุนุฑุจู ูููููุฉ"""
    task_names = {
        # ุงูููุงู ุงูุฃุณุงุณูุฉ
        'prayer_1': 'ุตูุงุฉ ุงููุฌุฑ',
        'study_1': 'ุงููุฐุงูุฑุฉ ุงูุฃููู',
        'prayer_2': 'ุตูุงุฉ ุงูุธูุฑ',
        'study_2': 'ุงููุฐุงูุฑุฉ ุงูุซุงููุฉ',
        'prayer_3': 'ุตูุงุฉ ุงูุนุตุฑ',
        'study_3': 'ุงููุฑุงุฌุนุฉ',
        'prayer_4': 'ุตูุงุฉ ุงููุบุฑุจ',
        'prayer_5': 'ุตูุงุฉ ุงูุนุดุงุก',
        'meal_1': 'ุงูุฅูุทุงุฑ',
        'meal_2': 'ุงูุนุดุงุก',
        
        # ููุงู ุงูุฌุฏูู ุงูุตุจุงุญู
        'daily_plan': 'ุฎุทุฉ ุงูููู ุงูุฏุฑุงุณู',
        'morning_join': 'ุงููุนุณูุฑ ุงูุตุจุงุญู',
        'breakfast': 'ูุทูุฑ ูุฑุงุญุฉ',
        'back_to_study': 'ุงูุนูุฏุฉ ูููุฐุงูุฑุฉ',
        'short_break': 'ุงุณุชุฑุงุญุฉ ูุตูุฑุฉ',
        'back_after_break': 'ุงูุนูุฏุฉ ุจุนุฏ ุงูุฑุงุญุฉ',
        'after_prayer_study': 'ูุฐุงูุฑุฉ ุจุนุฏ ุงูุตูุงุฉ',
        'nap_time': 'ููุช ุงููููููุฉ',
        'wake_up': 'ุงูุงุณุชููุงุธ',
        'evaluation': 'ุชูููู ุงูููู',
        
        # ููุงู ุงูุฌุฏูู ุงููุณุงุฆู
        'evening_join': 'ุงููุนุณูุฑ ุงููููู',
        'evening_plan': 'ุงููุฏู ุงููููู ุงูุฏุฑุงุณู',
        'evening_study': 'ููุช ุงูุฅูุฌุงุฒ ุงูุญูููู',
        'dinner_break': 'ุงุณุชุฑุงุญุฉ ุงูุนุดุงุก',
        'night_study': 'ุงููุฐุงูุฑุฉ ุงูููููุฉ',
        'long_break': 'ุงุณุชุฑุงุญุฉ ุทูููุฉ',
        'night_evaluation': 'ุชูููู ุงูููู ุงููููู',
        
        # ููุงู ุฃุฎุฑู
        'early_sleep': 'ุงูููู ุงููุจูุฑ',
        'tahajjud': 'ููุงู ุงูููู',
        'custom': 'ูููุฉ ูุฎุตุตุฉ'
    }
    return task_names.get(task_type, task_type)


# ูุธุงุฆู ููุงู ุงูุฌุฏูู

def send_task_by_type(group_id, task_type, schedule_type='morning'):
    """ุฅุฑุณุงู ูููุฉ ุจูุงุกู ุนูู ููุนูุง ูููุน ุงูุฌุฏูู"""
    # ุงุฎุชูุงุฑ ุงูุฌุฏูู ุงูููุงุณุจ
    schedule = MORNING_SCHEDULE if schedule_type == 'morning' else EVENING_SCHEDULE
    
    # ุงูุจุญุซ ุนู ุงููููุฉ ูู ุงูุฌุฏูู
    for _, task_id, message, points in schedule:
        if task_id == task_type:
            # ุฅุถุงูุฉ ุงูุชุจุงุณ ุชุญููุฒู ุนุดูุงุฆู
            motivation = random.choice(MOTIVATIONAL_QUOTES)
            text = f"{message}\n\nโจ {motivation}"
            
            # ุฅุฑุณุงู ุงููููุฉ
            return send_group_task_message(group_id, task_type, text, points=points, deadline_minutes=10)
    
    # ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููููุฉุ ุงุณุชุฎุฏู ุงููุต ุงูุงูุชุฑุงุถู
    task_name = get_task_name(task_type)
    text = f"<b>{task_name}</b>\n\nุญุงู ููุนุฏ {task_name}.\nุงูุถู ูููููุฉ ูุชุญุตู ุนูู ุงูููุงุท."
    return send_group_task_message(group_id, task_type, text, points=2, deadline_minutes=10)


# ููุงู ุงูุฌุฏูู ุงูุตุจุงุญู

# ุฅุฑุณุงู ูููุฉ ุฎุทุฉ ุงูููู ุงูุฏุฑุงุณู
def send_daily_plan_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุฎุทุฉ ุงูููู ุงูุฏุฑุงุณู"""
    return send_task_by_type(group_id, 'daily_plan')


# ุฅุฑุณุงู ุฑุณุงูุฉ ุตูุงุฉ ุงููุฌุฑ ูููุฌููุนุฉ
def send_fajr_prayer_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงููุฌุฑ ูููุฌููุนุฉ"""
    return send_task_by_type(group_id, 'prayer_1')


# ุฅุฑุณุงู ูููุฉ ุงููุทูุฑ ูุงูุฑุงุญุฉ
def send_breakfast_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงููุทูุฑ ูุงูุฑุงุญุฉ"""
    return send_task_by_type(group_id, 'breakfast')


# ุฅุฑุณุงู ูููุฉ ุงูุนูุฏุฉ ูููุฐุงูุฑุฉ
def send_back_to_study_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงูุนูุฏุฉ ูููุฐุงูุฑุฉ"""
    return send_task_by_type(group_id, 'back_to_study')


# ุฅุฑุณุงู ูููุฉ ุงุณุชุฑุงุญุฉ ูุตูุฑุฉ
def send_short_break_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงุณุชุฑุงุญุฉ ูุตูุฑุฉ"""
    return send_task_by_type(group_id, 'short_break')


# ุฅุฑุณุงู ูููุฉ ุงูุนูุฏุฉ ุจุนุฏ ุงูุฑุงุญุฉ
def send_back_after_break_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงูุนูุฏุฉ ุจุนุฏ ุงูุฑุงุญุฉ"""
    return send_task_by_type(group_id, 'back_after_break')


# ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงูุธูุฑ
def send_dhuhr_prayer_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงูุธูุฑ"""
    return send_task_by_type(group_id, 'prayer_2')


# ุฅุฑุณุงู ูููุฉ ุงููุฐุงูุฑุฉ ุจุนุฏ ุงูุตูุงุฉ
def send_after_prayer_study_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงููุฐุงูุฑุฉ ุจุนุฏ ุงูุตูุงุฉ"""
    return send_task_by_type(group_id, 'after_prayer_study')


# ุฅุฑุณุงู ูููุฉ ููุช ุงููููููุฉ
def send_nap_time_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ููุช ุงููููููุฉ"""
    return send_task_by_type(group_id, 'nap_time')


# ุฅุฑุณุงู ูููุฉ ุงูุงุณุชููุงุธ
def send_wake_up_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงูุงุณุชููุงุธ"""
    return send_task_by_type(group_id, 'wake_up')


# ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงูุนุตุฑ
def send_asr_prayer_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงูุนุตุฑ"""
    return send_task_by_type(group_id, 'prayer_3')


# ุฅุฑุณุงู ูููุฉ ุงููุฑุงุฌุนุฉ
def send_review_study_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงููุฑุงุฌุนุฉ"""
    return send_task_by_type(group_id, 'study_3')


# ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงููุบุฑุจ
def send_maghrib_prayer_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงููุบุฑุจ"""
    return send_task_by_type(group_id, 'prayer_4')


# ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงูุนุดุงุก
def send_isha_prayer_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุตูุงุฉ ุงูุนุดุงุก"""
    return send_task_by_type(group_id, 'prayer_5')


# ุฅุฑุณุงู ูููุฉ ุชูููู ุงูููู
def send_evaluation_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุชูููู ุงูููู"""
    return send_task_by_type(group_id, 'evaluation')


# ููุงู ุงูุฌุฏูู ุงููุณุงุฆู

# ุฅุฑุณุงู ูููุฉ ุฎุทุฉ ุงูููู ุงููููู
def send_evening_plan_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุฎุทุฉ ุงูููู ุงููููู"""
    return send_task_by_type(group_id, 'evening_plan', schedule_type='evening')


# ุฅุฑุณุงู ูููุฉ ุงููุฐุงูุฑุฉ ุงููุณุงุฆูุฉ
def send_evening_study_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงููุฐุงูุฑุฉ ุงููุณุงุฆูุฉ"""
    return send_task_by_type(group_id, 'evening_study', schedule_type='evening')


# ุฅุฑุณุงู ูููุฉ ุงุณุชุฑุงุญุฉ ุงูุนุดุงุก
def send_dinner_break_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงุณุชุฑุงุญุฉ ุงูุนุดุงุก"""
    return send_task_by_type(group_id, 'dinner_break', schedule_type='evening')


# ุฅุฑุณุงู ูููุฉ ุงููุฐุงูุฑุฉ ุงูููููุฉ
def send_night_study_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงููุฐุงูุฑุฉ ุงูููููุฉ"""
    return send_task_by_type(group_id, 'night_study', schedule_type='evening')


# ุฅุฑุณุงู ูููุฉ ุงูุงุณุชุฑุงุญุฉ ุงูุทูููุฉ
def send_long_break_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุงูุงุณุชุฑุงุญุฉ ุงูุทูููุฉ"""
    return send_task_by_type(group_id, 'long_break', schedule_type='evening')


# ุฅุฑุณุงู ูููุฉ ุชูููู ุงูููู ุงููููู
def send_night_evaluation_task(group_id):
    """ุฅุฑุณุงู ูููุฉ ุชูููู ุงูููู ุงููููู"""
    return send_task_by_type(group_id, 'night_evaluation', schedule_type='evening')


# ุฅุฑุณุงู ูููุฉ ูุฎุตุตุฉ ูููุฌููุนุฉ
def send_custom_task(group_id, task_title, task_description, task_type, points=1, deadline_minutes=10):
    """ุฅุฑุณุงู ูููุฉ ูุฎุตุตุฉ ูููุฌููุนุฉ"""
    try:
        # ุงูุชุญูู ูู ุงููุฌููุนุฉ
        group = Group.query.get(group_id)
        if not group:
            logger.error(f"ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุฌููุนุฉ {group_id}")
            return None
            
        # ุงูุชุญูู ูู ุชูุนูู ุงูุฌุฏูู ุงููุฎุตุต
        if not group.custom_schedule_enabled:
            logger.error(f"ุงูุฌุฏูู ุงููุฎุตุต ุบูุฑ ููุนู ูููุฌููุนุฉ {group_id}")
            return None
        
        # ุฅุถุงูุฉ ุงูุชุจุงุณ ุชุญููุฒู ุนุดูุงุฆู
        motivation = random.choice(MOTIVATIONAL_QUOTES)
        
        # ูุต ุงููููุฉ
        text = f"""
โ๏ธ <b>{task_title}</b>

{task_description}

โจ {motivation}
"""
        
        # ุฅุฑุณุงู ุงููููุฉ
        return send_group_task_message(group_id, task_type, text, points, deadline_minutes)
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ุฅุฑุณุงู ุงููููุฉ ุงููุฎุตุตุฉ: {e}")
        return None


# ูุนุงูุฌุฉ ุฃูุฑ ุฅูุดุงุก ูููุฉ ูุฎุตุตุฉ
def handle_custom_task_command(group_id, admin_id, command_text):
    """ูุนุงูุฌุฉ ุฃูุฑ ุฅูุดุงุก ูููุฉ ูุฎุตุตุฉ"""
    try:
        # ุงูุชุญูู ูู ุงููุฌููุนุฉ
        group = Group.query.get(group_id)
        if not group:
            return "โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุฌููุนุฉ"
            
        # ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุดุฑู
        if admin_id != group.admin_id:
            return "โ ูุฐุง ุงูุฃูุฑ ูุชุงุญ ููุท ููุดุฑู ุงููุฌููุนุฉ"
            
        # ุงูุชุญูู ูู ุชูุนูู ุงูุฌุฏูู ุงููุฎุตุต
        if not group.custom_schedule_enabled:
            return "โ ุงูุฌุฏูู ุงููุฎุตุต ุบูุฑ ููุนู ููุฐู ุงููุฌููุนุฉ. ูู ุจุชูุนููู ุฃููุงู ูู ุฅุนุฏุงุฏุงุช ุงูุฌุฏูู"
        
        # ุชุญููู ูุต ุงูุฃูุฑ
        params = command_text.strip().split('|')
        if len(params) < 3:
            return "โ ุตูุบุฉ ุบูุฑ ุตุญูุญุฉ. ุงูุฑุฌุงุก ุงุณุชุฎุฏุงู:\n/custom_task <ุนููุงู ุงููููุฉ> | <ูุตู ุงููููุฉ> | <ููุน ุงููููุฉ> | <ุงูููุงุท> | <ุงููููุฉ ุจุงูุฏูุงุฆู>"
        
        # ุงูุญุตูู ุนูู ุงููุนูููุงุช
        task_title = params[0].strip()
        task_description = params[1].strip()
        task_type = params[2].strip() if len(params) > 2 else 'custom'
        
        # ุงูููุงุท ูุงููููุฉ
        try:
            points = int(params[3].strip()) if len(params) > 3 else 1
            deadline_minutes = int(params[4].strip()) if len(params) > 4 else 10
        except ValueError:
            return "โ ูุฌุจ ุฃู ุชููู ุงูููุงุท ูุงููููุฉ ุฃุฑูุงูุงู ุตุญูุญุฉ"
        
        # ุฅุฑุณุงู ุงููููุฉ
        task = send_custom_task(group_id, task_title, task_description, task_type, points, deadline_minutes)
        if task:
            return f"โ ุชู ุฅูุดุงุก ุงููููุฉ \"{task_title}\" ุจูุฌุงุญ! (ุงูููุงุท: {points}, ุงููููุฉ: {deadline_minutes} ุฏูููุฉ)"
        else:
            return "โ ุญุฏุซ ุฎุทุฃ ูู ุฅูุดุงุก ุงููููุฉ"
    except Exception as e:
        logger.error(f"ุฎุทุฃ ูู ูุนุงูุฌุฉ ุฃูุฑ ุงููููุฉ ุงููุฎุตุตุฉ: {e}")
        return "โ ุญุฏุซ ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุฃูุฑ"


# ููุชูุงูู ูุน ุงูุฃููุงุฏ ุงูุณุงุจูุฉ - ุฅุฑุณุงู ุฑุณุงูุฉ ุงููุฐุงูุฑุฉ ุงูุฃููู ูููุฌููุนุฉ
def send_first_study_task(group_id, schedule_type='morning'):
    """ุฅุฑุณุงู ูููุฉ ุงููุฐุงูุฑุฉ ุงูุฃููู ูููุฌููุนุฉ"""
    if schedule_type == 'morning':
        return send_back_to_study_task(group_id)
    else:  # evening
        return send_evening_study_task(group_id)
